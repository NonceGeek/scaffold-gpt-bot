{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAI Bot Transaction API",
    "version": "1.0.0",
    "description": "API for processing transactions with an OpenAI Bot."
  },
  "servers": [
    {
      "url": "https://relife.deno.dev"
    }
  ],
  "paths": {
    "/talents": {
      "get": {
        "description": "get talants",
        "operationId": "GetTalents",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "The Type of the prompt.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "deprecated": false
      }
    },
    "/random_book": {
      "get": {
        "description": "get random book",
        "operationId": "GetRandomBook",
        "parameters": [],
        "deprecated": false
      }
    },
    "/prompt": {
      "get": {
        "description": "get prompt",
        "operationId": "GetPrompt",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The ID of the prompt.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "deprecated": false
      }
    },
    "/batch": {
      "post": {
        "summary": "Get Event by Ages",
        "description": "Get Event by Ages.",
        "operationId": "getEventByAges",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ages": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "description": "ages"
                  },
                  "type": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "type"
                  }
                },
                "required": ["ages"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transaction processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the transaction"
                    },
                    "details": {
                      "type": "string",
                      "description": "Detailed message about the transaction"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/batch_without_talents": {
      "post": {
        "summary": "getEventByAgesWithoutTalents",
        "description": "getEventByAgesWithoutTalents",
        "operationId": "getEventByAgesWithoutTalents",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ages": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "description": "ages"
                  }
                },
                "required": ["ages"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation successful"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/result": {
      "post": {
        "summary": "Get EventResult by UUID",
        "description": "Get EventResult by UUID.",
        "operationId": "getEventResultByUUID",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "description": "uuid"
                  }
                },
                "required": ["uuid"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation successful"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/events_be_choiced": {
      "post": {
        "summary": "Get EventCouldBeChoiced by Age",
        "description": "Get EventCouldBeChoiced by Age.",
        "operationId": "getEventEventCouldBeChoicedByAge",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "age": {
                    "type": "integer",
                    "description": "age"
                  }
                },
                "required": ["age"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation successful"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/": {
      "post": {
        "summary": "Get Event by Age",
        "description": "Get Event by Age.",
        "operationId": "getEventByAge",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "age": {
                    "type": "integer",
                    "description": "age"
                  }
                },
                "required": ["age"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transaction processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the transaction"
                    },
                    "details": {
                      "type": "string",
                      "description": "Detailed message about the transaction"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
