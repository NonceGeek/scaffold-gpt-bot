
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pg_net" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."bodhi_raw_assets" (
    "id" bigint NOT NULL,
    "id_on_chain" bigint,
    "ar_tx_id" "text",
    "creator" "text",
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "if_handled_to_bodhi_text_assets" boolean DEFAULT false NOT NULL
);

ALTER TABLE "public"."bodhi_raw_assets" OWNER TO "postgres";

ALTER TABLE "public"."bodhi_raw_assets" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."bodhi_raw_assets_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."bodhi_text_assets" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "id_on_chain" bigint,
    "content" "text",
    "creator" "text",
    "if_sliced" boolean DEFAULT false
);

ALTER TABLE "public"."bodhi_text_assets" OWNER TO "postgres";

ALTER TABLE "public"."bodhi_text_assets" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."bodhi_text_assets_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."handled_data" (
    "id" bigint NOT NULL,
    "content" "json",
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."handled_data" OWNER TO "postgres";

ALTER TABLE "public"."handled_data" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."handled_data_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."raw_data" (
    "id" bigint NOT NULL,
    "content" "text" DEFAULT 'opps'::"text",
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."raw_data" OWNER TO "postgres";

ALTER TABLE "public"."raw_data" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."raw_data_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."bodhi_raw_assets"
    ADD CONSTRAINT "bodhi_raw_assets_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."bodhi_text_assets"
    ADD CONSTRAINT "bodhi_text_assets_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."handled_data"
    ADD CONSTRAINT "handled_data_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."raw_data"
    ADD CONSTRAINT "raw_data_pkey" PRIMARY KEY ("id");

CREATE OR REPLACE TRIGGER "to_handled" AFTER INSERT ON "public"."raw_data" FOR EACH ROW EXECUTE FUNCTION "supabase_functions"."http_request"('https://www.boredapi.com/api/activity', 'GET', '{"Content-Type":"application/json"}', '{}', '1000');

CREATE OR REPLACE TRIGGER "to_text_database" AFTER INSERT ON "public"."bodhi_raw_assets" FOR EACH ROW EXECUTE FUNCTION "supabase_functions"."http_request"('https://jzwizjgzaxdaatskzsih.supabase.co/functions/v1/to_text_database', 'POST', '{"Content-type":"application/json"}', '{}', '1000');

ALTER TABLE "public"."bodhi_raw_assets" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."bodhi_text_assets" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."handled_data" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."raw_data" ENABLE ROW LEVEL SECURITY;

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."bodhi_raw_assets" TO "anon";
GRANT ALL ON TABLE "public"."bodhi_raw_assets" TO "authenticated";
GRANT ALL ON TABLE "public"."bodhi_raw_assets" TO "service_role";

GRANT ALL ON SEQUENCE "public"."bodhi_raw_assets_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."bodhi_raw_assets_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."bodhi_raw_assets_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."bodhi_text_assets" TO "anon";
GRANT ALL ON TABLE "public"."bodhi_text_assets" TO "authenticated";
GRANT ALL ON TABLE "public"."bodhi_text_assets" TO "service_role";

GRANT ALL ON SEQUENCE "public"."bodhi_text_assets_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."bodhi_text_assets_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."bodhi_text_assets_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."handled_data" TO "anon";
GRANT ALL ON TABLE "public"."handled_data" TO "authenticated";
GRANT ALL ON TABLE "public"."handled_data" TO "service_role";

GRANT ALL ON SEQUENCE "public"."handled_data_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."handled_data_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."handled_data_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."raw_data" TO "anon";
GRANT ALL ON TABLE "public"."raw_data" TO "authenticated";
GRANT ALL ON TABLE "public"."raw_data" TO "service_role";

GRANT ALL ON SEQUENCE "public"."raw_data_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."raw_data_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."raw_data_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
