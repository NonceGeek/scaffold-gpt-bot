create table "public"."bodhi_user_search" (
    "id" bigint generated by default as identity not null,
    "search_data" text,
    "embedding" vector,
    "resp" json,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."bodhi_user_search" enable row level security;

CREATE UNIQUE INDEX bodhi_user_search_pkey ON public.bodhi_user_search USING btree (id);

alter table "public"."bodhi_user_search" add constraint "bodhi_user_search_pkey" PRIMARY KEY using index "bodhi_user_search_pkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.match_full_dataset(query_embedding vector, match_threshold double precision, match_count integer)
 RETURNS TABLE(id integer, data text, metadata json, uuid text, creator text, id_on_chain integer, similarity double precision)
 LANGUAGE sql
 STABLE
AS $function$
  select
    bodhi_text_assets_k_v.id,
    bodhi_text_assets_k_v.data,
    bodhi_text_assets_k_v.metadata,
    bodhi_text_assets_k_v.uuid,
    bodhi_text_assets_k_v.creator,
    bodhi_text_assets_k_v.id_on_chain,
    1 - (bodhi_text_assets_k_v.embedding <=> query_embedding) as similarity
  from bodhi_text_assets_k_v
  where bodhi_text_assets_k_v.embedding <=> query_embedding < 1 - match_threshold
  order by bodhi_text_assets_k_v.embedding <=> query_embedding
  limit match_count;
$function$
;


